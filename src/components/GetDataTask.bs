import "pkg:/source/roku_modules/rokurequests/Requests.brs"
import "pkg:/source/roku_modules/promises/promises.brs"

const EndpointUrl = "https://raw.githubusercontent.com/arturocuya/midnight-binge/master/movies-data.json"

sub init()
    m.top.functionName = "execute"
end sub

function getPromise(category as string) as object
    m.promise = promises.create()

    m.category = category

    m.top.control = "RUN"

    return m.promise
end function

sub execute()
    response = rokurequests_Requests().get(EndpointUrl, {
        timeout: 1000,
        useCache: true
    })

    if (response.statusCode <> 200)
        content = CreateObject("roSGNode", "ContentNode")
        promises.resolve(content, m.promise)
        return
    end if

    content = CreateObject("roSGNode", "ContentNode")

    row = content.CreateChild("ContentNode")

    category = LCase(m.category)
    movieCategories = response.json[category]

    if (movieCategories = invalid)
        content = CreateObject("roSGNode", "ContentNode")
        promises.resolve(content, m.promise)
        return
    end if

    for each movie in movieCategories
        node = row.CreateChild("ContentNode")
        node.AddFields(movie)
    end for

    promises.resolve(content, m.promise)
end sub
